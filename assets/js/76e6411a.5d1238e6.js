"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[294],{1375:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var n=a(8168),r=(a(6540),a(5680));const i={title:"First Steps"},o=void 0,s={unversionedId:"quick-start/first-steps",id:"version-6.x/quick-start/first-steps",title:"First Steps",description:"Specification version",source:"@site/versioned_docs/version-6.x/quick-start/first-steps.md",sourceDirName:"quick-start",slug:"/quick-start/first-steps",permalink:"/swagger-jsdoc/docs/6.x/quick-start/first-steps",draft:!1,editUrl:"https://github.com/deadendjs/swagger-jsdoc/tree/master/docusaurus/versioned_docs/version-6.x/quick-start/first-steps.md",tags:[],version:"6.x",frontMatter:{title:"First Steps"},sidebar:"tutorialSidebar",previous:{title:"Quick Start",permalink:"/swagger-jsdoc/docs/6.x/category/quick-start"},next:{title:"Contributing",permalink:"/swagger-jsdoc/docs/6.x/category/contributing"}},p={},l=[{value:"Specification version",id:"specification-version",level:2},{value:"Annotating source code",id:"annotating-source-code",level:2},{value:"Using YAML",id:"using-yaml",level:2},{value:"Further resources",id:"further-resources",level:2},{value:"Examples",id:"examples",level:2},{value:"Related projects",id:"related-projects",level:2}],g={toc:l},c="wrapper";function u({components:e,...t}){return(0,r.yg)(c,(0,n.A)({},g,t,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"specification-version"},"Specification version"),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"swagger-jsdoc")," was created in 2015. The OpenAPI as a concept did not exist, and thus the naming of the package itself."),(0,r.yg)("p",null,"The default target specification is 2.0. This provides backwards compatibility for many APIs written in the last couple of years."),(0,r.yg)("p",null,"In order to create a specification compatibile with 3.0 or higher, i.e. the so called OpenAPI, set this information in the ",(0,r.yg)("inlineCode",{parentName:"p"},"swaggerDefinition"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-diff"},"import swaggerJsdoc from 'swagger-jsdoc';\n\nconst options = {\n  definition: {\n+   openapi: '3.0.0',\n    info: {\n      title: 'Hello World',\n      version: '1.0.0',\n    },\n  },\n  apis: ['./src/routes*.js'],\n};\n\nconst openapiSpecification = await swaggerJsdoc(options);\n")),(0,r.yg)("h2",{id:"annotating-source-code"},"Annotating source code"),(0,r.yg)("p",null,"Place ",(0,r.yg)("inlineCode",{parentName:"p"},"@swagger")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"@openapi")," on top of YAML-formatted specification parts:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"/**\n * @swagger\n *\n * /login:\n *   post:\n *     produces:\n *       - application/json\n *     parameters:\n *       - name: username\n *         in: formData\n *         required: true\n *         type: string\n *       - name: password\n *         in: formData\n *         required: true\n *         type: string\n */\napp.post('/login', (req, res) => {\n  // Your implementation comes here ...\n});\n")),(0,r.yg)("h2",{id:"using-yaml"},"Using YAML"),(0,r.yg)("p",null,"It's possible to source parts of your specification through YAML files."),(0,r.yg)("p",null,"Imagine having a file ",(0,r.yg)("inlineCode",{parentName:"p"},"x-amazon-apigateway-integrations.yaml")," with the following contents:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"x-amazon-apigateway-integrations:\n  default-integration: &default-integration\n    type: object\n    x-amazon-apigateway-integration:\n      httpMethod: POST\n      passthroughBehavior: when_no_match\n      type: aws_proxy\n      uri: 'arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:123456789:function:helloworldlambda/invocations'\n")),(0,r.yg)("p",null,"The following is an acceptable reference to information from ",(0,r.yg)("inlineCode",{parentName:"p"},"x-amazon-apigateway-integrations.yaml")," when it's defined within the ",(0,r.yg)("inlineCode",{parentName:"p"},"apis")," input array."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"  /**\n   * @swagger\n   * /aws:\n   *   get:\n   *     description: contains a reference outside this file\n   *     x-amazon-apigateway-integration: *default-integration\n   */\n  app.get('/aws', (req, res) => {\n    // Your implementation comes here ...\n  });\n};\n")),(0,r.yg)("h2",{id:"further-resources"},"Further resources"),(0,r.yg)("p",null,"Additional materials to inspire you:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://medium.com/geekculture/de-duping-the-duplication-in-services-featuring-swagger-openapi-and-ajv-abd22c8c764e"},"De-duping the Duplication in Services Featuring: Swagger/OpenAPI and AJV")," - 09/03/2021"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://js.plainenglish.io/how-to-implement-and-use-swagger-in-nodejs-d0b95e765245"},"How to implement and use Swagger in Node.js")," - 24/02/2021"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://dev.to/paulasantamaria/document-your-javascript-code-with-jsdoc-2fbf"},"Document your Javascript code with JSDoc")," - 20/08/2019"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.acuriousanimal.com/blog/2018/10/20/express-swagger-doc"},"Express API with autogenerated OpenAPI doc through Swagger")," - 20/10/2018"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"http://imaginativethinking.ca/swaggerize-your-api-documentation/"},"Swaggerize your API Documentation")," - 01/06/2018"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://mherman.org/blog/swagger-and-nodejs/"},"Swagger and NodeJS")," 20/11/2017"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://kalinchernev.github.io/agile-documentation-api-driven-project"},"Agile documentation for your API-driven project")," - 21/01/2017")),(0,r.yg)("p",null,"Suggestions for extending this helpful list are welcome! ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Surnet/swagger-jsdoc/issues/new"},"Submit your article")),(0,r.yg)("h2",{id:"examples"},"Examples"),(0,r.yg)("p",null,"Here's a list of example public open-source usages of the package:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/godaddy/gasket"},"godaddy/gasket")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/godaddy/warehouse.ai-status-api"},"godaddy/warehouse.ai-status-api")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/SAP-samples/hana-developer-cli-tool-example"},"hana-developer-cli-tool-example")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/studiohyperdrive/api-docs"},"studiohyperdrive/api-docs")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Surnet/swagger-jsdoc/tree/v7/examples"},"More Examples"))),(0,r.yg)("h2",{id:"related-projects"},"Related projects"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/godaddy/swagger-jsdoc-deref"},"godaddy/swagger-jsdoc-deref")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/slanatech/swagger-stats"},"slanatech/swagger-stats")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/weseek/growi"},"weseek/growi")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/linagora/openpaas-esn"},"linagora/openpaas-esn")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/Tiemma/sonic-express"},"Tiemma/sonic-express")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/kevoj/nodetomic-api-swagger"},"kevoj/nodetomic-api-swagger")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://github.com/hagopj13/node-express-mongoose-boilerplate"},"node-express-mongoose-boilerplate"))))}u.isMDXComponent=!0},5680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>d});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),l=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},g=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),c=l(a),m=r,d=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return a?n.createElement(d,o(o({ref:t},g),{},{components:a})):n.createElement(d,o({ref:t},g))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);